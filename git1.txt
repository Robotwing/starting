1. 建立git respository
-- mkdir gitlearn
-- pwd
-- git init

2. 添加文件进入 respository
-- add first.txt
-- add second.txt

3. 提交文件到仓库
-- git commit -m "注释" //可一次提交多个文件

4. 查看仓库现在状态
-- git status

5. 查看修改内容
-- git diff git1.txt

6. 查看历史日志记录
-- git log
-- git log --pretty=oneline //只显示版本号与描述

7. 版本回退
-- git reset --hard HEAD^ //上一个版本
-- git reset --hard 1234556 //该版本号版本

8. 丢弃工作区修改
-- git checkout --git1.txt  //回到最近一次git commit或者git add的状态

9. 丢弃暂存区修改
-- git reset HEAD git1.txt 

10 删除文件
-- rm test.txt
//delete completely
-- git rm test.txt
-- git commit
//recovery
-- git checkout -- test.txt

11 关联远程仓库
-- git remote add origin git@github.com:Robotwing/starting.git

12 把内容推送到远程库
-- git push -u origin master //the first time
-- git push origin master

13 从远程库克隆内容
-- git clone git@github.com:Robotwing/starting.git

14 创建、切换、查看、合并、删除分支
-- git checkout -b dev  //创建dev分支，并切换dev分支
-- git branch dev
-- git checkout dev
-- git branch //列出所有分支，当前分支前标*号
-- git merge dev //将dev合并到当前分支
-- git branch -d dev
-- git branch -D dev //强行删除未合并的dev分支

15 查看分支合并情况
-- git log --graph --pretty=oneline --abbrev-commit

16 fast forward模式合并保留分支信息
-- git merge --no-ff -m "merge with no-ff" dev

17 把另一个分支的commit应用到当前分支
-- git cherry-pick <commit id>

18 暂存状态
-- git stash 
-- git stash list
--git stash apply stash@{0}

-- git stash apply //恢复同时不删除stash内容
-- git stash drop

-- git stash pop   //恢复同时删除stash内容

19 查看远程库详细信息
-- git remote -v

20 抓取远程新提交
-- git pull

30 创建、关联远程分支  //clone只能获取本地master分支
-- git checkout -b branch-name origin/branch-name
-- git branch --set-upstream branch-name origin/branch-name